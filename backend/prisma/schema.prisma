// schema.prisma - VERSI DIPERBAIKI

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// =====================================
// MODEL-MODEL UTAMA - DIPERBAIKI
// =====================================

model User {
  id                  String           @id @default(cuid())
  name                String
  email               String           @unique
  password            String
  role                Role             @default(STAFF)

  // Relasi
  incomingLetters     IncomingLetter[]
  outgoingLetters     OutgoingLetter[]
  calendarEvents      CalendarEvent[]
  notifications       Notification[]

  // Timestamps
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt

  @@map("users")
}

model IncomingLetter {
  id                         String             @id @default(cuid())
  letterNumber               String             @unique
  subject                    String
  sender                     String
  recipient                  String
  processor                  String
  receivedDate               DateTime
  letterDate                 DateTime?
  note                       String?
  fileName                   String?
  filePath                   String?
  isInvitation               Boolean            @default(false)
  needsFollowUp              Boolean            @default(false)
  followUpDeadline           DateTime?
  eventDate                  DateTime?
  eventTime                  String?
  eventLocation              String?
  eventNotes                 String?
  
  // ✅ KOREKSI: Srikandi sebagai nomor, bukan metode
  srikandiDispositionNumber  String?
  
  letterNature               LetterNature       @default(BIASA)
  overdueNotifiedAt          DateTime?

  // ✅ KOREKSI PENAMAAN: Metode pengolahan surat
  processingMethod           ProcessingMethod   @default(MANUAL)
  
  // ✅ KOREKSI PENAMAAN: Target disposisi
  dispositionTarget          DispositionTarget?

  // Relasi
  userId                     String
  user                       User               @relation(fields: [userId], references: [id])
  calendarEvents             CalendarEvent[]

  // Timestamps
  createdAt                  DateTime           @default(now())
  updatedAt                  DateTime           @updatedAt

  // Indeks untuk optimasi query
  @@index([userId])
  @@index([receivedDate])
  @@index([letterNature])
  @@index([processingMethod])
  @@index([dispositionTarget])
  @@map("incoming_letters")
}

model OutgoingLetter {
  id                         String             @id @default(cuid())
  letterNumber               String             @unique
  subject                    String
  sender                     String
  recipient                  String
  processor                  String
  createdDate                DateTime
  letterDate                 DateTime
  executionDate              DateTime?
  note                       String?
  fileName                   String?
  filePath                   String?
  isInvitation               Boolean            @default(false)
  eventDate                  DateTime?
  eventTime                  String?
  eventLocation              String?
  eventNotes                 String?
  serialNumber               Int?
  classificationCode         String?
  
  // ✅ KOREKSI: Srikandi sebagai nomor untuk surat keluar juga
  srikandiDispositionNumber  String?
  
  overdueNotifiedAt          DateTime?
  letterNature               LetterNature       @default(BIASA)
  securityClass              SecurityClass      @default(BIASA)
  
  // ✅ KOREKSI: Metode pengolahan untuk surat keluar
  processingMethod           ProcessingMethod   @default(MANUAL)

  // Relasi
  userId                     String
  user                       User               @relation(fields: [userId], references: [id])
  calendarEvents             CalendarEvent[]

  // Timestamps
  createdAt                  DateTime           @default(now())
  updatedAt                  DateTime           @updatedAt

  // Indeks untuk optimasi query
  @@index([userId])
  @@index([createdDate])
  @@map("outgoing_letters")
}

model CalendarEvent {
  id              String        @id @default(cuid())
  title           String
  description     String?
  date            DateTime
  time            String?
  location        String?
  type            EventType     @default(MEETING)
  
  // Tracking notifikasi
  notified3Days   Boolean       @default(false)
  notified1Day    Boolean       @default(false)
  
  // Relasi ke Surat (opsional - untuk track asal event)
  incomingLetterId String?
  incomingLetter   IncomingLetter? @relation(fields: [incomingLetterId], references: [id])
  outgoingLetterId String?
  outgoingLetter   OutgoingLetter? @relation(fields: [outgoingLetterId], references: [id])
  
  // Relasi ke User yang membuat
  userId          String
  user            User          @relation(fields: [userId], references: [id])
  
  // Relasi ke Notifications
  notifications   Notification[]

  // Timestamps
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  @@index([date])
  @@index([incomingLetterId])
  @@index([outgoingLetterId])
  @@index([userId])
  @@map("calendar_events")
}

model Notification {
  id        String           @id @default(cuid())
  title     String
  message   String
  isRead    Boolean          @default(false)
  type      NotificationType @default(INFO)
  
  // Relasi
  userId    String?          
  user      User?            @relation(fields: [userId], references: [id])
  calendarEventId String?    
  calendarEvent CalendarEvent? @relation(fields: [calendarEventId], references: [id])

  // Timestamps
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt

  @@index([userId])
  @@index([calendarEventId])
  @@map("notifications")
}

// =====================================
// ENUMERASI - DIPERBAIKI
// =====================================

enum Role {
  ADMIN
  STAFF
}

enum LetterNature {
  BIASA
  TERBATAS
  RAHASIA
  SANGAT_RAHASIA
  PENTING
}

enum SecurityClass {
  BIASA
}

// ✅ KOREKSI: Metode pengolahan surat (Manual/Srikandi)
enum ProcessingMethod {
  MANUAL
  SRIKANDI
}

// ✅ KOREKSI: Target disposisi (UMPEG, BIDANG1, dll)
enum DispositionTarget {
  UMPEG
  PERENCANAAN
  KAUR_KEUANGAN
  KABID
  BIDANG1
  BIDANG2
  BIDANG3
  BIDANG4
  BIDANG5
}

enum NotificationType {
  INFO
  WARNING
  SUCCESS
  ERROR
}

enum EventType {
  MEETING
  APPOINTMENT 
  DEADLINE
  OTHER
}